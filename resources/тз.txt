Предлагаем сделать следующее тестовое задание.

Реализация клиентского и серверного модуля. Протокол взаимодействие – REST или WebSocket. Выбор и реализация на усмотрение кандидата.

В работе приложений используется тестовый набор данных из файла airports.dat (в аттаче). Это обычный csv файл.

Клиентский модуль:
· Выполнить запрос информации, передавая серверному модулю следующие данные:
	o   Уникальный ID запроса в формате UUID
	o   Наименование текущего потока
	o   ID записи из файла (столбец №1)
	o   TimeStamp запроса
· После получения ответа от серверного модуля произвести логирование полученной информации, включая наименование потока и ID исходного запроса (предусмотреть наличие Reference ID (идентификатор исходного запроса в ответе сервера) в формате обмена)
· Выполнить проверку соответствия идентификатора исходной записи с полученным ответом, с последующим логированием результатов проверки.
· Перейти к обработке следующей записи исходного набора 

Серверный модуль:
· Выполнить прием сообщений от клиентского модуля
· Произвести логирование клиентского запроса
· Произвести поиск информации в тестовом наборе по переданному идентификатору
· Выполнить передачу результирующего набора клиентскому модулю. Включая уникальный ID ответа (в формате UUID), ID исходного запроса, timestamp получения запроса и timestamp отправки ответа.

Просьба реализовать серверный модуль на SpringBoot.
Реализация клиентского модуля в виде исполняемого jar
Реализация клиентского модуля в многопоточном режиме (одновременная обработка нескольких записей) будет плюсом. При этом не допускается отправки нескольких запросов по одному ID.
Логирование работы клиентского и серверного модулей реализовать через log4j с возможностью конфигурирования через файл properties.
Способ загрузки тестового набора данных из файла в процессе инициализации приложения на усмотрение разработчика.  
Решение ждем в виде архива с кодом (можно разместить в доступных репозиториях Git). Плюсом будет ссылка на внешний диск с собранными jar файлами, готовыми к запуску.
